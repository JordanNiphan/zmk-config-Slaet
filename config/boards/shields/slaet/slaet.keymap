#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/mouse.h>
#define DEFAULT      0
#define NUMLAYER     1
#define NAVLAYER     2
#define QWERTY       3

/*
80 KEY MATRIX / LAYOUT MAPPING
(Unused numbers marked with *)
  ╭──────────────────────────────────────┬─────────────────────────────────────╮
  │  0   1   2   3   4   5   6      *7   | *8        9  10  11  12  13  14  15 │
  │ 16  17  18  19  20  21  22      *23  │ *24      25  26  27  28  29  30  31 │
  │ 32  33  34  35  36  37  38      39   │ 40       41  42  43  44  45  46  47 │
  │ 48  49  50  51  52  53      54  55   │ 56  57       58  59  60  61  62  63 │
  │ 64  65  66  67  68      69  70  71   │ 72  73  74       75  76  77  78  79 │
  ╰────────────────────────────────────────────────────────────────────────────╯

  ╭──────────────────────────────────────────────────────────┬─────────────────────────────────────────────────────────────────╮
  │ LT7   LT6   LT5   LT4   LT3   LT2   LT1           *LT0   |   *RT0           RT1    RT2    RT3    RT4    RT5    RT6    RT7  │
  │ LTM7  LTM6  LTM5  LTM4  LTM3  LTM2  LTM1          *LTM0  │   *RTM0          RTM1   RTM2   RTM3   RTM4   RTM5   RTM6   RTM7 │
  │ LM7   LM6   LM5   LM4   LM3   LM2   LM1           LM0    │   RM0            RM1    RM2    RM3    RM4    RM5    RM6    RM7  │
  │ LBM7  LBM6  LBM5  LBM4  LBM3  LBM2          LBM1  LBM0   │   RBM0   RBM1           RBM2   RBM3   RBM4   RBM5   RBM6   RBM7 │
  │ LB7   LB6   LB5   LB4   LB3           LB2   LB1   LB0    │   RB0    RB1    RB2            RB3    RB4    RB5    RB6    RB7  │
  ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
*/

/ {
    combos {
        compatible = "zmk,combos";
        combo_default {
            timeout-ms = <50>;
            key-positions = <75 76>;
            bindings = <&to DEFAULT>;
        };        
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        combo_ent {
            timeout-ms = <50>;
            key-positions = <59 60>;
            bindings = <&kp RET>;
        };
        combo_bspc {
            timeout-ms = <50>;
            key-positions = <43 44>;
            bindings = <&kp BSPC>;
        };
        combo_tab {
            timeout-ms = <50>;
            key-positions = <19 20>;
            bindings = <&kp TAB>;
        };
        combo_quote {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp SQT>;
        };
        combo_lclk {
            timeout-ms = <50>;
            key-positions = <35 36>;
            bindings = <&mkp LCLK>;
        };
        combo_rclk {
            timeoutf-ms = <50>;
            key-positions = <34 35>;
            bindings = <&mkp RCLK>;
        };
        combo_del {
            timeout-ms = <50>;
            key-positions = <52 53>;
            bindings = <&kp DEL>;
        };
        combo_qwerty {
            timeout-ms = <50>;
            key-positions = <9 10 11>;
            bindings = <&to QWERTY>;
        };
    };
};

/*
Transparent Layer Template
--------------------------

        TRANSLAYER {

                bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                              &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                              &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans       &trans &trans      &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                      &trans      &trans                      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans      &trans  &trans   &trans             &trans  &trans  &trans  &trans  &trans
                >;
        };
*/



/ {
    keymap {
        compatible = "zmk,keymap";

            bindings = <
&kp ESC &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp N6                                                                              &none   &kp N6  &kp N7  &kp N8      &kp N9          &kp N0      &kp MINUS
&kp TAB &kp Q   &kp W   &kp F   &kp P   &kp B   &kp N7                                                                              &none   &kp J   &kp L   &kp U       &kp Y           &kp SEMI    &none
&none   &kp A   &kp R   &kp S   &kp T   &kp G   &kp N8                      &kp N3  &kp LEFT_GUI            &none   &none           &none   &kp M   &kp N   &kp E       &lt NAVLAYER I  &kp O       &none
&none   &kp Z   &kp X   &kp C   &kp D   &kp V                                       &kp N1                  &none                           &kp K   &kp H   &kp COMMA   &kp DOT         &kp FSLH    &none
&none   &none   &none   &none   &none           &kp LCTRL   &lt NUMLAYER SPACE      &sk LSHIFT              &none       &none   &none               &none   &none       &none           &none       &none
            >;

        };

        NUMLAYER {

                bindings = <
&trans  &trans      &trans      &trans      &trans      &trans      &trans                                              &trans  &trans  &trans  &trans  &trans      &trans          &tran
&trans  &kp EXCL    &kp AT      &kp LBRC    &kp RBRC    &PIPE2      &trans                                              &trans  &trans  &kp N7  &kp N8  &kp N9      &kp ASTRK       &kp EQUAL
&trans  &kp HASH    &kp DLLR    &kp LPAR    &kp RPAR    &kp DOT     &trans      &trans  &trans      &trans &trans       &trans  &trans  &kp N4  &kp N5  &kp N6      &kp PLUS        &kp MINUS
&trans  &kp FSLH    &kp CARET   &kp LBKT    &kp RBKT    &kp TILDE2                      &trans      &trans                      &trans  &kp N1  &kp N2  &kp N3      &kp KP_DIVIDE   &kp AMPS
&trans  &trans      &trans      &trans      &trans                  &trans  &trans      &trans      &trans      &trans  &trans          &kp N0  &kp N0  &kp DOT     &trans          &trans
                >;
        };

        NAVLAYER {

                bindings = <
&trans  &trans  &trans      &trans      &trans      &trans  &bootloader                                                 &bootloader &trans  &trans          &trans          &trans          &trans          &bt BT_CLR
&trans  &trans  &kp PG_DN   &kp UP      &kp PG_UP   &trans  &trans                                                      &trans      &trans  &trans          &trans          &trans          &trans          &trans
&trans  &trans  &kp LEFT    &kp DOWN    &kp RIGHT   &trans  &trans          &trans  &trans      &trans  &trans          &trans      &trans  &trans          &trans          &trans          &trans          &trans
&trans  &trans  &trans      &trans      &trans      &trans                          &trans      &trans                              &trans  &trans          &trans          &trans          &trans          &trans
&trans  &trans  &trans      &trans      &trans                  &trans  &trans      &trans      &trans      &trans   &trans                 &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &trans
                >;
        };
        
        QWERTY {

                bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                              &trans  &trans  &trans  &trans      &trans          &trans      &trans
&trans  &kp Q   &kp W   &kp E   &kp R   &kp T   &trans                                                              &trans  &kp Y   &kp U   &kp I       &kp O           &kp P       &trans
&trans  &kp A   &kp S   &kp D   &kp F   &kp G   &trans          &trans  &trans          &trans  &trans              &trans  &kp H   &kp J   &kp K       &lt NAVLAYER L  &kp SEMI    &trans
&trans  &kp Z   &kp X   &kp C   &kp V   &kp B                           &trans          &trans                              &kp N   &kp M   &kp COMMA   &kp DOT         &kp FSLH    &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans      &trans          &trans      &trans   &trans                 &trans  &trans      &trans          &trans      &trans
                >;
        };

};







